# with open('whole.bin', 'rb') as f:
#     c = f.read()

# with open('go.bin', 'wb') as f:
#     f.write(c[c.find(b'\x7fELF'):])

import re
import struct
from itertools import cycle

with open('tmp', 'rb') as f:
    data = f.read()
    
with open('go.bin', 'rb') as f:
    go_bin = f.read()

pick = lambda offset, len: go_bin[offset:offset+len]

def vmcode_extract():
    
    vmcode_pattern = b":dung3onm4st3r13!user@127.0.0.1 PRIVMSG #dungeon :(.*)\r"
    
    phase = bytearray()
    for txt in re.findall(vmcode_pattern, data):
        if txt.startswith(b"Izahl, you have learned how"):
            if phase != b"":
                with open('input1', 'wb') as f:
                    f.write(phase)
            phase = bytearray(txt)
        elif txt.startswith(b"Izahl"):
            continue
        else:
            phase += txt

    with open('input2', 'wb') as f:
        f.write(phase)

def vmcode_gen(inp):
    
    inp_list = inp.replace(b", and", b",").split(b', ')
    print(inp_list)
    
    
    cnt = 0x200
    res = struct.unpack("<"+"Q"*cnt, pick(0x54b580, 8*cnt))

    ing_tbl = []
    for i in range(0, len(res), 2):
        start = res[i]-0x400000
        s = pick(start, res[i+1])
        ing_tbl.append(s)
    print(ing_tbl)
    
    bytecode = []
    for i in inp_list:
        code = ing_tbl.index(i)
        assert(code < 256)
        bytecode.append(code)
    
    print(bytecode)
    return bytes(bytecode)

def cast_extract():
    
    cast_pattern = b"I cast (.*) on the (.*) for (\d+)d(\d+) damage!"
    cnt = 0x290
    res = struct.unpack("<"+"Q"*cnt, pick(0x54e5a0, 8*cnt))

    tbl_spell = []
    for i in range(0, len(res), 2):
        start = res[i]-0x400000
        s = pick(start, res[i+1])
        tbl_spell.append(s)

    phase1_over = False
    phase = bytearray()
    for cast, monster, v1, v2 in re.findall(cast_pattern, data):
        
        ind = tbl_spell.index(cast)
        assert(ind < 256)
        phase += bytes([ind, int(v1), int(v2)])
        
        # if cast == b"Call Lightning" and phase1_over == False:
        #     phase1_over = True
            
        #     phase += bytes([tbl_spell.index(b"Branding Smite")])
            
        #     print("phase1 is finished")
            
        #     with open('output1', 'wb') as f:
        #         f.write(phase)
        #     phase = bytearray()
    print("phase2 is finished")
    print(phase)
    # with open('output2', 'wb') as f:
    #     f.write(phase)
        
def batch_run():
    
    with open('input1', 'rb') as f:
        in1 = f.read()

    vmc = vmcode_gen(in1[97:-1])

    with open('code1', 'wb') as f:
        f.write(vmc)
        
    with open('input2', 'rb') as f:
        in2 = f.read()

    vmc = vmcode_gen(in2[97:-1])

    with open('code2', 'wb') as f:
        f.write(vmc)
        
def arg_extract():
    
    arg1 = b"frightening, virtual, danish, flimsy, gruesome great, dark oppressive, bad, average, virtual, last, more strange, inhospitable, slimy, average, few dismal"
    
    arg2 = b"flimsy, gruesome great, dark oppressive, bad, average, virtual, last, more strange, inhospitable, slimy, average, few dismal, flimsy, dark and gruesome, inhospitable, inhospitable, frightening, last, slimy, nicest, solid, dark oppressive, few dismal, deep subterranean, last, gruesome great, average, gruesome great, average, cruel, damned, common, bad"
    
    arg_list = [arg1, arg2]
    
    cnt = 0x150
    res = struct.unpack("<"+"Q"*cnt, pick(0x54fb00, 8*cnt))

    tbl_dungeon = []
    for i in range(0, len(res), 2):
        start = res[i]-0x400000
        s = pick(start, res[i+1])
        tbl_dungeon.append(s)
    print(tbl_dungeon)
    
    
    for i in arg_list:
        res = []
        for j in i.split(b', '):
            res.append(tbl_dungeon.index(j))
        print(bytes(res))
        
# arg_extract()

# cast_extract()

def final_solve():
    ind = [i for i in range(24)]
    with open('output2', 'rb') as f:
        ct = f.read()
        
    with open('key_table', 'rb') as f:
        key_table = f.read()
    
    key_tbl = []
    for i in range(24):
        key_tbl.append([key_table[j*24+i] for j in range(256)])
    
    pt = bytearray()
    cnt = 0
    for a, b in zip(ct, cycle(ind)):
        cnt += 1 
        if cnt < 10:
            print(a, b)
        pt += bytes([key_tbl[b].index(a)])
    
    print(len(pt))
    with open('ans.png', 'wb') as f:
        f.write(pt)

final_solve()

'''
:Izirin, you enter the dungeon Graf's Infernal Disco. It is frightening, virtual, danish, flimsy, gruesome great, dark oppressive, bad, average, virtual, last, more strange, inhospitable, slimy, average, and few dismal..


:Izirin, you encounter a Goblin in the distance. It stares at you imposingly. The beast smells quite foul. What do you do?


:Izirin, you enter the dungeon The Sunken Crypt. It is flimsy, gruesome great, dark oppressive, bad, average, virtual, last, more strange, inhospitable, slimy, average, few dismal, flimsy, dark and gruesome, inhospitable, inhospitable, frightening, last, slimy, nicest, solid, dark oppressive, few dismal, deep subterranean, last, gruesome great, average, gruesome great, average, cruel, damned, common, and bad..

:Izirin, you encounter a Wyvern in the distance. It stares at you imposingly. The beast sits in the water, waiting for you to approach it. What do you do?


                0       1       2       3       4       5       6       7
0xc0004c4000:	0x58	0x4c	0x28	0x90	0x1c	0x4d	0x52	0x04
0xc0004c4008:	0xf8	0xff	0x28	0xa9	0xa3	0xc5	0x72	0x22
0xc0004c4010:	0x5d	0x89	0xbc	0x79	0x05	0x8d	0xd7	0x51
                0
0xc0003d4000:	0x58	0xda	0xc5	0x91	0x28	0x75	0x76	0x03
0xc0003d4008:	0xf8	0x68	0xc5	0xd3	0xc8	0x91	0x83	0x61
0xc0003d4010:	0x5d	0x0d	0x76	0xcb	0x40	0xe0	0x85	0xea
                1       1
0xc0003d4018:	0x90	0x4c	0x53	0x73	0x62	0x9a	0x45	0x3c
0xc0003d4020:	0x29	0xff	0x53	0xe7	0xc4	0x73	0xd6	0x7a
0xc0003d4028:	0x54	0x89	0x45	0x12	0x24	0x43	0xfc	0xa8
                2       2       2
0xc0003d4030:	0xdb	0x68	0x28	0x42	0xc5	0xec	0xbc	0x61
0xc0003d4038:	0xc3	0xda	0x28	0x59	0x3d	0x42	0x40	0x03
0xc0003d4040:	0x1e	0xfe	0xbc	0xc6	0x83	0x5b	0x25	0x9c
                3       3       3       3
0xc0003d4048:	0x73	0x5b	0xb7	0x90	0x7e	0xc7	0x8e	0xd2
0xc0003d4050:	0x77	0xe0	0xb7	0xa9	0x49	0x90	0xcd	0x0e
0xc0003d4058:	0x2c	0x0f	0x8e	0x79	0x6c	0x68	0xf0	0x44
                4       4       4       4       4
0xc0003d4060:	0x94	0x69	0x41	0xf7	0x1c	0xa8	0xf5	0xbf
0xc0003d4068:	0x6b	0x98	0x41	0x7d	0xa3	0xf7	0x4a	0x26
0xc0003d4070:	0x17	0x25	0xf5	0xd5	0x05	0xf6	0xfe	0x9a
                5       5       5       5       5       5
0xc0003d4078:	0x08	0x76	0x91	0xc5	0x42	0x4d	0xda	0x3b
0xc0003d4080:	0x4f	0xbc	0x91	0xef	0x1f	0xc5	0xcf	0xa5
0xc0003d4088:	0x66	0x4e	0xda	0xca	0x7b	0x8d	0x9e	0xd1
                6       6       6       6       6       6       6
0xc0003d4090:	0x0f	0x87	0x35	0x89	0x0c	0x6a	0x52	0x51
0xc0003d4098:	0x5a	0xb8	0x35	0x1e	0xc6	0x89	0x72	0xf6
0xc0003d40a0:	0x59	0x73	0x52	0x3d	0xf2	0x26	0xd7	0x04
                7       7       7       7       7       7       7       7
0xc0003d40a8:	0x15	0x0b	0x5e	0xe5	0x14	0xe6	0xe8	0x04
0xc0003d40b0:	0x59	0xf1	0x5e	0xc3	0x72	0xe5	0xc6	0x22
0xc0003d40b8:	0x5a	0xad	0xe8	0x40	0xcb	0xf4	0x21	0x51

0xc0003d40c0:	0x49	0xa0	0x1a	0xc4	0xac	0xf5	0xa8	0xd3
0xc0003d40c8:	0x22	0xaf	0x1a	0x03	0x73	0xc4	0xad	0x59
0xc0003d40d0:	0xf6	0xc6	0xa8	0xfe	0xeb	0x17	0xd5	0x45
0xc0003d40d8:	0x41	0x63	0x94	0xbb	0x8f	0x82	0xfd	0xc3
0xc0003d40e0:	0x61	0x6e	0x94	0x04	0xc9	0xbb	0x0d	0xf8
0xc0003d40e8:	0x9c	0x83	0xfd	0xeb	0xfe	0xf3	0x05	0x1e
0xc0003d40f0:	0xcb	0xe4	0x21	0x55	0x84	0xa5	0x6f	0x2c
0xc0003d40f8:	0x44	0x7d	0x21	0x98	0x2e	0x55	0x97	0x4d
0xc0003d4100:	0xd2	0x5f	0x6f	0x58	0x15	0x32	0x5e	0x77
0xc0003d4108:	0x3b	0x09	0xa1	0x38	0x37	0xc6	0x25	0x08
0xc0003d4110:	0x86	0x9e	0xa1	0x8b	0x6a	0x38	0xe6	0x3a
0xc0003d4118:	0xe3	0xf5	0x25	0xec	0x43	0x24	0xbc	0x56
0xc0003d4120:	0xad	0x46	0xb0	0x2a	0xd5	0xd9	0x39	0x44
0xc0003d4128:	0x2c	0x33	0xb0	0x30	0xcd	0x2a	0x49	0x4b
0xc0003d4130:	0x77	0x15	0x39	0x1c	0x5f	0x50	0xac	0xd2
0xc0003d4138:	0x5c	0xa2	0x88	0x7c	0x9b	0xb5	0xe7	0xea
0xc0003d4140:	0x5d	0x50	0x88	0x45	0x83	0x7c	0xc8	0x9c
0xc0003d4148:	0xf8	0xc9	0xe7	0xf2	0x3d	0x33	0xbd	0x03
0xc0003d4150:	0xc3	0x4a	0xbf	0x02	0x26	0xa7	0xe9	0x41
0xc0003d4158:	0xdb	0x05	0xbf	0x15	0xa4	0x02	0x69	0x1c
0xc0003d4160:	0x47	0x30	0xe9	0x4b	0x98	0x0c	0x6e	0x80
0xc0003d4168:	0x56	0xe7	0x7c	0x88	0x01	0x95	0xa2	0xd1
0xc0003d4170:	0x66	0x3e	0x7c	0x4c	0xcf	0x88	0x1f	0xfb
0xc0003d4178:	0x4f	0x36	0xa2	0x0a	0xfa	0x16	0x34	0x3b
0xc0003d4180:	0x86	0xb3	0xf9	0x8f	0xbb	0x4b	0x6e	0x4f
0xc0003d4188:	0x3b	0xfd	0xf9	0xa6	0xb1	0x8f	0x70	0xd9
0xc0003d4190:	0xd1	0x7b	0x6e	0xa7	0x4e	0x92	0xe9	0x66
0xc0003d4198:	0xb4	0xd6	0x3c	0x64	0x7a	0x80	0x2b	0x53
0xc0003d41a0:	0x0a	0x24	0x3c	0x1f	0xef	0x64	0x4c	0x62
0xc0003d41a8:	0xca	0x81	0x2b	0x66	0xff	0x9e	0x8d	0xa7
0xc0003d41b0:	0xb1	0x10	0xcc	0xb6	0x71	0x5a	0xf4	0x93
0xc0003d41b8:	0x6a	0x23	0xcc	0x31	0x86	0xb6	0xe3	0x9f
0xc0003d41c0:	0xe6	0x8a	0xf4	0xab	0x60	0xe8	0x3f	0x7f
0xc0003d41c8:	0xfc	0x7a	0x24	0xf0	0xd6	0xc1	0x57	0xff
0xc0003d41d0:	0x81	0x3c	0x24	0xfb	0xce	0xf0	0x62	0x4c
0xc0003d41d8:	0x07	0x0a	0x57	0x36	0x53	0xa1	0x90	0xbe
0xc0003d41e0:	0xc0	0x81	0xdd	0x72	0x0a	0xd8	0x51	0x52
0xc0003d41e8:	0x7a	0x19	0xdd	0x8c	0xe5	0x72	0x89	0x29
0xc0003d41f0:	0xb2	0xd6	0x51	0x01	0xdf	0x7f	0x74	0xe8
0xc0003d41f8:	0xab	0x3c	0xd6	0x2b	0x24	0xa4	0x64	0x4c
0xc0003d4200:	0x19	0x7a	0xd6	0xd1	0xa7	0x2b	0x53	0xff
0xc0003d4208:	0xa6	0xdd	0x64	0xb1	0x62	0x37	0x2d	0xef
0xc0003d4210:	0xf1	0x97	0x2c	0xec	0x4d	0x42	0x2f	0x21
0xc0003d4218:	0xb0	0x15	0x2c	0x05	0xf3	0xec	0xe4	0x84
0xc0003d4220:	0xb7	0x33	0x2f	0x38	0x7d	0xc9	0x04	0xd7
0xc0003d4228:	0x6b	0x40	0x61	0xa5	0x03	0x55	0x7b	0x28
0xc0003d4230:	0x94	0x83	0x61	0xac	0x50	0xa5	0x68	0xc5
0xc0003d4238:	0xd0	0x6e	0x7b	0x0b	0xda	0xcd	0x30	0x9b
0xc0003d4240:	0x3e	0x8a	0xde	0xee	0x6a	0x0c	0x47	0x34
0xc0003d4248:	0x71	0x56	0xde	0x2d	0x37	0xee	0xe1	0xed
0xc0003d4250:	0xe9	0x10	0x47	0x92	0x1d	0xa7	0xd1	0x9e
0xc0003d4258:	0x97	0xf1	0x14	0x6d	0x5e	0x43	0x54	0x22
0xc0003d4260:	0xd3	0x0b	0x14	0xf8	0xf2	0x6d	0xcb	0x04
0xc0003d4268:	0x45	0xeb	0x54	0x83	0xc6	0x9a	0x84	0xf6
0xc0003d4270:	0xcc	0x66	0xb1	0x20	0x36	0xe0	0x5d	0x9d
0xc0003d4278:	0xe7	0xc7	0xb1	0x29	0xf9	0x20	0x12	0x8c
0xc0003d4280:	0x76	0x01	0x5d	0xd6	0x3f	0x75	0x60	0xb3
0xc0003d4288:	0x26	0xfe	0xf8	0x4f	0xc3	0xae	0x70	0x8f
0xc0003d4290:	0xc5	0x0d	0xf8	0x14	0x67	0x4f	0x6e	0x94
0xc0003d4298:	0x88	0x68	0x70	0xa0	0x63	0x0f	0x69	0x78
0xc0003d42a0:	0x9f	0x3f	0x8c	0x32	0x9d	0xcd	0xd0	0x36
0xc0003d42a8:	0xfa	0x12	0x8c	0xdd	0xd9	0x32	0xc7	0xb1
0xc0003d42b0:	0x7b	0xd1	0xd0	0xff	0x66	0x55	0x10	0x4e
0xc0003d42b8:	0xda	0x58	0x30	0xe6	0x18	0xe5	0x08	0x25
0xc0003d42c0:	0x05	0xdb	0x30	0xb0	0xd8	0xe6	0x38	0x85
0xc0003d42c8:	0xb6	0xbf	0x08	0xe4	0x6b	0x00	0x61	0x65
0xc0003d42d0:	0x65	0xea	0xc8	0x1f	0x3d	0x92	0xd1	0xa2
0xc0003d42d8:	0x67	0x9c	0xc8	0x64	0xc5	0x1f	0x88	0x50
0xc0003d42e0:	0x6e	0xd0	0xd1	0x0c	0x9b	0x4b	0x47	0xda
0xc0003d42e8:	0x47	0x50	0x9b	0x01	0x88	0x31	0x3e	0x9c
0xc0003d42f0:	0x1e	0xa2	0x9b	0x5a	0x40	0x01	0x3d	0xea
0xc0003d42f8:	0xc3	0x20	0x3e	0x72	0xc8	0x46	0x65	0x61
0xc0003d4300:	0x72	0x11	0xaa	0xc0	0xd7	0xd1	0x92	0x95
0xc0003d4308:	0x0e	0xf3	0xaa	0xa4	0x15	0xc0	0x0f	0x77
0xc0003d4310:	0x4b	0xcd	0x92	0x47	0x2e	0x6e	0x0c	0x4d
0xc0003d4318:	0x40	0x6b	0x85	0x9e	0x25	0xa6	0x37	0x18
0xc0003d4320:	0x69	0x38	0x85	0x4b	0x47	0x9e	0xdb	0x30
0xc0003d4328:	0xa4	0x1c	0x37	0x15	0x58	0x64	0xc5	0xee
0xc0003d4330:	0x13	0xb9	0xb2	0xaf	0xa8	0x1c	0xac	0xce
0xc0003d4338:	0x1b	0xc4	0xb2	0x7b	0xff	0xaf	0xbe	0xa7
0xc0003d4340:	0xdd	0xa6	0xac	0xd9	0xef	0xed	0x39	0x62
0xc0003d4348:	0xe4	0xcb	0x22	0xa6	0x04	0x9e	0xca	0x14
0xc0003d4350:	0x1a	0xc6	0x22	0x8f	0xb8	0xa6	0xf1	0x5e
0xc0003d4358:	0x2b	0xaf	0xca	0xda	0x0b	0x80	0x4d	0x0c
0xc0003d4360:	0x9e	0xa5	0x7b	0x40	0xcf	0xe4	0x61	0xbc
0xc0003d4368:	0xfd	0x3b	0x7b	0xb2	0x01	0x40	0x42	0x76
0xc0003d4370:	0x8c	0xf9	0x61	0xe5	0x91	0xb4	0x08	0x3e
0xc0003d4378:	0xf6	0xd7	0xf3	0x27	0x11	0xfa	0x48	0x2e
0xc0003d4380:	0xcd	0xaa	0xf3	0x79	0x2c	0x27	0x77	0x0f
0xc0003d4388:	0x49	0x0e	0x48	0xa9	0x95	0x94	0x87	0x97
0xc0003d4390:	0x12	0x93	0xe3	0x79	0x60	0x57	0xc1	0x10
0xc0003d4398:	0x1d	0x9f	0xe3	0x27	0xc2	0x79	0xcc	0x23
0xc0003d43a0:	0xa1	0x34	0xc1	0x90	0x71	0x07	0x36	0x06
0xc0003d43a8:	0x2f	0x54	0x6d	0x14	0xe5	0x18	0xf1	0xa6
0xc0003d43b0:	0xef	0xe8	0x6d	0x4f	0x0a	0x14	0xca	0x07
0xc0003d43b8:	0x4c	0xce	0xf1	0xcf	0x1b	0x23	0xd4	0x19
0xc0003d43c0:	0xae	0xbe	0xce	0xeb	0xa7	0x26	0x59	0xb2
0xc0003d43c8:	0xe8	0xef	0xce	0xbc	0x24	0xeb	0xb9	0xa8
0xc0003d43d0:	0x52	0x6d	0x59	0xbb	0xc4	0x6a	0x8b	0x7a
0xc0003d43d8:	0xca	0x6f	0x55	0x21	0xd4	0x61	0xe4	0xec
0xc0003d43e0:	0x82	0x96	0x55	0x7f	0x74	0x21	0x2f	0x75
0xc0003d43e8:	0xb4	0x99	0xe4	0x08	0xba	0x8c	0xe5	0x31
0xc0003d43f0:	0xb9	0x13	0x99	0x5f	0x8b	0x6e	0x4b	0x16
0xc0003d43f8:	0x96	0x82	0x99	0x37	0x2d	0x5f	0xae	0x39
0xc0003d4400:	0x92	0x55	0x4b	0xe9	0x2a	0xd1	0xa7	0x8d
0xc0003d4408:	0x81	0xc0	0x92	0x11	0x27	0xc8	0xaa	0xdc
0xc0003d4410:	0xfc	0x48	0x92	0x60	0x75	0x11	0xb5	0x74
0xc0003d4418:	0x99	0xb4	0xaa	0xde	0x31	0xf9	0x29	0xba
0xc0003d4420:	0x76	0x08	0xe6	0x30	0x43	0x5e	0x58	0x09
0xc0003d4428:	0xc2	0x3a	0xe6	0x2a	0x1d	0x30	0xa1	0x9e
0xc0003d4430:	0xcc	0x02	0x58	0x6f	0x37	0x62	0xa5	0xed
'''